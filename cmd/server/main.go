package main

import (
	"context"
	"log"
	"net/http"

	"connectrpc.com/connect"
	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	currencies "currencies-exchange/gen/currencies/v1" // generated by protoc-gen-go
	"currencies-exchange/gen/currencies/v1/currenciesconnect"
)

type CurrenciesServer struct{}

func (s *CurrenciesServer) Exchange(
	ctx context.Context,
	req *connect.Request[currencies.ExchangeRequest],
) (*connect.Response[currencies.ExchangeResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&currencies.ExchangeResponse{
		Result: 100,
	})
	res.Header().Set("Currencies-Version", "v1")
	return res, nil
}

func main() {
	currenciesServer := &CurrenciesServer{}
	mux := http.NewServeMux()
	path, handler := currenciesconnect.NewExchangeServiceHandler(currenciesServer)
	mux.Handle(path, handler)
	http.ListenAndServe(
		"localhost:8080",
		// Use h2c so we can serve HTTP/2 without TLS.
		h2c.NewHandler(mux, &http2.Server{}),
	)
}
